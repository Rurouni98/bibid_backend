plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.final'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'org.postgresql:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // jwt 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // 이메일 전송을 위한 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // cloudflare R2 관련
    implementation 'software.amazon.awssdk:s3:2.20.132'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // dotenv 의존성 추가
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // httpclient
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

    implementation 'com.google.firebase:firebase-admin:9.3.0'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // json-simple 라이브러리 추가
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

}

//Q 도메인 클래스 생성 위치 변수로 선언
def generated = 'src/main/generated'

//Q 도메인 클래스 생성 위치 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// Java Sourceset에 Q 도메인 클래스 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// 프로젝트 클린 시 Q 도메인 클래스도 다 삭제되도록 지정
clean {
    delete file(generated)
}

tasks.named('test') {
    useJUnitPlatform()
}
